import React, { useEffect, useState } from 'react';
import { Col, Row } from 'react-bootstrap';
import useSetup from '../hooks/useSetup';
import '../styles/setupServices.css';
import { useNavigate } from 'react-router-dom';
import DashboardEmpty from './DashboardEmpty';
import down from '../images/arrowdown.svg'
import up from '../images/arrowup.svg'

const SetupDropdown = (props) => {
  const navigate = useNavigate()
  
  const [open, setOpen]=useState(false)
  const { service,  service_code, index, openIndex, setOpenIndex } = props;
  useEffect(() => {
    if (index !== openIndex)
      setOpen(false)
  }, [openIndex])
  console.log({ service: service });
  return  <div class="select-service-holder">
  <h2 >
      <button
        onClick={() => {
          setOpen(!open)
          setOpenIndex(index)
        }}
      className="select-service-btn"
      type="button"
    
    >
      <span>{service.name}</span>
      <img style={{height:10}} src={open?up:down}/>
                      </button>
  </h2>
  <div
  
  >
    <div className={!open ? 'select-service-body menu-slider closed' : 'select-service-body menu-slider'} >
        <ul>
          {service.setup&&service.setup.map((setup, index)=>
<li key={index} className="d-flex justify-content-between">
   <p>{setup.setup_name}</p>
              <button className="btn" onClick={() => {
                navigate(`/dashboard/setup/${setup.setup_url}`);
                localStorage.setItem('@veripay_service_code', service_code)
              }}>
     <svg
       style={{ marginRight: '5px' }}
       width="20"
       height="20"
       viewBox="0 0 20 20"
       fill="none"
       xmlns="http://www.w3.org/2000/svg"
     >
       <path
         d="M10.0102 1.875C10.6218 1.88167 11.231 1.9525 11.8285 2.08583C11.9556 2.11421 12.0707 2.18159 12.1577 2.27855C12.2446 2.37552 12.2991 2.49722 12.3135 2.62667L12.4552 3.89917C12.4752 4.07857 12.537 4.25077 12.6357 4.40192C12.7344 4.55307 12.8672 4.67894 13.0234 4.76941C13.1796 4.85987 13.3549 4.91241 13.5351 4.92279C13.7153 4.93317 13.8954 4.9011 14.061 4.82917L15.2285 4.31667C15.3471 4.26446 15.4789 4.25037 15.6058 4.27634C15.7327 4.30232 15.8484 4.36708 15.9368 4.46167C16.7801 5.36257 17.4081 6.44301 17.7735 7.62167C17.8118 7.74553 17.8107 7.87825 17.7702 8.00143C17.7298 8.1246 17.652 8.23215 17.5477 8.30917L16.5127 9.0725C16.3671 9.17941 16.2488 9.31908 16.1672 9.48021C16.0856 9.64134 16.0431 9.8194 16.0431 10C16.0431 10.1806 16.0856 10.3587 16.1672 10.5198C16.2488 10.6809 16.3671 10.8206 16.5127 10.9275L17.5485 11.69C17.6531 11.767 17.7312 11.8746 17.7718 11.998C17.8124 12.1213 17.8136 12.2543 17.7752 12.3783C17.4096 13.5569 16.7817 14.6373 15.9385 15.5383C15.8502 15.6327 15.7349 15.6974 15.6083 15.7235C15.4818 15.7496 15.3503 15.7359 15.2318 15.6842L14.0593 15.17C13.894 15.0975 13.7139 15.065 13.5337 15.075C13.3534 15.085 13.178 15.1373 13.0218 15.2277C12.8655 15.3181 12.7327 15.444 12.6341 15.5953C12.5355 15.7465 12.4739 15.9189 12.4543 16.0983L12.3135 17.37C12.2993 17.498 12.2459 17.6186 12.1606 17.7151C12.0752 17.8116 11.9622 17.8794 11.8368 17.9092C10.6298 18.1963 9.37222 18.1963 8.16518 17.9092C8.03985 17.8794 7.92678 17.8116 7.84146 17.7151C7.75613 17.6186 7.70271 17.498 7.68851 17.37L7.54851 16.1C7.5281 15.921 7.46597 15.7493 7.36711 15.5986C7.26826 15.448 7.13543 15.3226 6.97933 15.2327C6.82322 15.1427 6.64818 15.0906 6.46828 15.0806C6.28838 15.0706 6.10864 15.1029 5.94351 15.175L4.77185 15.6883C4.65333 15.7402 4.52162 15.7541 4.39489 15.728C4.26817 15.7019 4.15267 15.6371 4.06435 15.5425C3.22077 14.6405 2.59279 13.5589 2.22768 12.3792C2.18926 12.2551 2.19044 12.1222 2.23107 11.9988C2.27169 11.8754 2.34973 11.7678 2.45435 11.6908L3.49018 10.9275C3.63589 10.8207 3.75438 10.6811 3.83605 10.5199C3.91773 10.3588 3.96029 10.1807 3.96029 10C3.96029 9.81934 3.91773 9.64122 3.83605 9.48008C3.75438 9.31894 3.63589 9.17931 3.49018 9.0725L2.45435 8.31083C2.34988 8.23376 2.272 8.12607 2.23153 8.00272C2.19106 7.87937 2.19001 7.74648 2.22851 7.6225C2.59395 6.44385 3.22192 5.36343 4.06518 4.4625C4.15367 4.36791 4.26936 4.30315 4.39625 4.27718C4.52315 4.2512 4.65498 4.26529 4.77351 4.3175L5.94018 4.83C6.10603 4.90189 6.28643 4.93388 6.46689 4.92341C6.64734 4.91293 6.82283 4.86027 6.97924 4.76966C7.13565 4.67906 7.26864 4.55303 7.3675 4.4017C7.46637 4.25037 7.52837 4.07797 7.54851 3.89833L7.69018 2.62667C7.70448 2.49696 7.75902 2.37499 7.84615 2.27785C7.93327 2.1807 8.04862 2.11327 8.17601 2.085C8.77351 1.9525 9.38435 1.8825 10.0102 1.875ZM10.0102 3.125C9.63217 3.12944 9.25501 3.16203 8.88185 3.2225L8.79101 4.03667C8.74941 4.4113 8.62033 4.77091 8.41419 5.08649C8.20805 5.40207 7.93061 5.66477 7.60427 5.85341C7.27793 6.04204 6.91182 6.15133 6.53547 6.17245C6.15912 6.19357 5.78308 6.12594 5.43768 5.975L4.68935 5.64667C4.21267 6.2251 3.83327 6.87723 3.56601 7.5775L4.23101 8.06667C4.53453 8.28972 4.7813 8.58106 4.95138 8.91714C5.12147 9.25321 5.21009 9.62459 5.21009 10.0013C5.21009 10.3779 5.12147 10.7493 4.95138 11.0854C4.7813 11.4214 4.53453 11.7128 4.23101 11.9358L3.56518 12.4258C3.83185 13.1275 4.21185 13.7808 4.68851 14.3608L5.44268 14.03C5.78726 13.8796 6.16234 13.8121 6.53774 13.8331C6.91314 13.8541 7.27837 13.9629 7.60403 14.1508C7.92968 14.3388 8.20667 14.6005 8.41269 14.915C8.61871 15.2296 8.74801 15.5881 8.79018 15.9617L8.88185 16.7817C9.62268 16.9067 10.3802 16.9067 11.121 16.7817L11.2127 15.9617C11.2542 15.5876 11.383 15.2285 11.5889 14.9134C11.7947 14.5982 12.0717 14.3359 12.3976 14.1476C12.7235 13.9593 13.0891 13.8502 13.4649 13.8292C13.8407 13.8082 14.2162 13.8758 14.561 14.0267L15.3152 14.3567C15.7916 13.7779 16.1707 13.1255 16.4377 12.425L15.7727 11.935C15.4692 11.7119 15.2224 11.4206 15.0523 11.0845C14.8822 10.7485 14.7936 10.3771 14.7936 10.0004C14.7936 9.62375 14.8822 9.25238 15.0523 8.9163C15.2224 8.58023 15.4692 8.28889 15.7727 8.06583L16.436 7.57667C16.1688 6.8764 15.7894 6.22427 15.3127 5.64583L14.566 5.97333C14.2208 6.12446 13.8449 6.19229 13.4686 6.17135C13.0924 6.1504 12.7263 6.04128 12.4 5.85278C12.0737 5.66428 11.7963 5.40169 11.5902 5.08621C11.3841 4.77073 11.2551 4.41121 11.2135 4.03667L11.1218 3.22333C10.7545 3.16328 10.3832 3.13069 10.011 3.12583L10.0102 3.125ZM10.0002 6.875C10.829 6.875 11.6238 7.20424 12.2099 7.79029C12.7959 8.37634 13.1252 9.1712 13.1252 10C13.1252 10.8288 12.7959 11.6237 12.2099 12.2097C11.6238 12.7958 10.829 13.125 10.0002 13.125C9.17138 13.125 8.37652 12.7958 7.79047 12.2097C7.20442 11.6237 6.87518 10.8288 6.87518 10C6.87518 9.1712 7.20442 8.37634 7.79047 7.79029C8.37652 7.20424 9.17138 6.875 10.0002 6.875ZM10.0002 8.125C9.5029 8.125 9.02599 8.32254 8.67435 8.67417C8.32272 9.02581 8.12518 9.50272 8.12518 10C8.12518 10.4973 8.32272 10.9742 8.67435 11.3258C9.02599 11.6775 9.5029 11.875 10.0002 11.875C10.4975 11.875 10.9744 11.6775 11.326 11.3258C11.6776 10.9742 11.8752 10.4973 11.8752 10C11.8752 9.50272 11.6776 9.02581 11.326 8.67417C10.9744 8.32254 10.4975 8.125 10.0002 8.125Z"
         fill="#2A70D9"
       />
     </svg>
     Setup
   </button>
 </li>
)}
</ul>
    </div>
  </div>
</div>
};

const SelectService = () => {
  const navigate = useNavigate()
  const [openIndex, setOpenIndex]=useState(null)
  const {services,getServices, getSalaryRegime, regimeList, loading, error, setError } = useSetup();
  useEffect(() => {
    getServices();
  }, []);
  return (
    <div className="w-100">
      <nav className=" w-100 d-flex justify-content-between ">
        <h1 className="fs-4">Services</h1>
        <button onClick={()=>navigate('/dashboard/setup')} className="btn fs-6 edit-grade-scale-btn">
          <span>Back</span>
        </button>
      </nav>
      <div className="w-100 dashboard-card">
        <div className="select-service-header d-flex w-100 justify-content-between ">
          <div className="service-title d-flex flex-column align-items-md-center">
            <h5>Setup Services</h5>
            <p>Setup your selected services tailored to your organizationâ€™s need.</p>
          </div>
          <svg
            onClick={()=>navigate('/dashboard')}
            style={{ cursor: 'pointer' }}
            width="32"
            height="32"
            viewBox="0 0 32 32"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M17.8799 16.0001L23.6132 10.2801C23.8643 10.029 24.0054 9.68849 24.0054 9.33342C24.0054 8.97835 23.8643 8.63782 23.6132 8.38675C23.3622 8.13568 23.0217 7.99463 22.6666 7.99463C22.3115 7.99463 21.971 8.13568 21.7199 8.38675L15.9999 14.1201L10.2799 8.38675C10.0288 8.13568 9.68832 7.99463 9.33325 7.99463C8.97818 7.99463 8.63766 8.13568 8.38659 8.38675C8.13551 8.63782 7.99446 8.97835 7.99446 9.33342C7.99446 9.68849 8.13551 10.029 8.38659 10.2801L14.1199 16.0001L8.38659 21.7201C8.26161 21.844 8.16242 21.9915 8.09473 22.154C8.02704 22.3165 7.99219 22.4907 7.99219 22.6668C7.99219 22.8428 8.02704 23.017 8.09473 23.1795C8.16242 23.342 8.26161 23.4895 8.38659 23.6134C8.51054 23.7384 8.658 23.8376 8.82048 23.9053C8.98296 23.973 9.15724 24.0078 9.33325 24.0078C9.50927 24.0078 9.68354 23.973 9.84602 23.9053C10.0085 23.8376 10.156 23.7384 10.2799 23.6134L15.9999 17.8801L21.7199 23.6134C21.8439 23.7384 21.9913 23.8376 22.1538 23.9053C22.3163 23.973 22.4906 24.0078 22.6666 24.0078C22.8426 24.0078 23.0169 23.973 23.1794 23.9053C23.3418 23.8376 23.4893 23.7384 23.6132 23.6134C23.7382 23.4895 23.8374 23.342 23.9051 23.1795C23.9728 23.017 24.0076 22.8428 24.0076 22.6668C24.0076 22.4907 23.9728 22.3165 23.9051 22.154C23.8374 21.9915 23.7382 21.844 23.6132 21.7201L17.8799 16.0001Z"
              fill="#222222"
            />
          </svg>
        </div>
        <div>
        <div className="w-100 dashboard-card">
      <Row className="justify-content-center pe-2 ps-2">
        <Col md={11}>
          
          {loading ? (
            <p>loading...</p>
          ) : (
            <div class="accordion accordion-flush" id="accordionFlushExample">
           
              <p style={{color:'lightgray'}} className='text-center fs-6'>Click on the card to select services</p>
              {services.map((service, index) => {
                if (service.subscribed)
                  return <div key={index}>
                    <SetupDropdown service_code={service.service_code} service={service} index={index} openIndex={openIndex} setOpenIndex={setOpenIndex} />
                  </div>
          //                       return (
          //       <div key={index} class="select-service-holder">
          //         <h2 >
          //           <button
          //             class="select-service-btn"
          //             type="button"
                    
          //           >
          //             <span>{service.name}</span>
          //             <img style={{height:10}} src={down}/>
          //                             </button>
          //         </h2>
          //         <div
                  
          //         >
          //           <div class="select-service-body">
          //                                <ul>
          //    <li className="d-flex justify-content-between">
          //          <p>{'element.structure_name'}</p>
          //          <button className="btn" onClick={()=>navigate('/dashboard/salary')}>
          //            <svg
          //              style={{ marginRight: '5px' }}
          //              width="20"
          //              height="20"
          //              viewBox="0 0 20 20"
          //              fill="none"
          //              xmlns="http://www.w3.org/2000/svg"
          //            >
          //              <path
          //                d="M10.0102 1.875C10.6218 1.88167 11.231 1.9525 11.8285 2.08583C11.9556 2.11421 12.0707 2.18159 12.1577 2.27855C12.2446 2.37552 12.2991 2.49722 12.3135 2.62667L12.4552 3.89917C12.4752 4.07857 12.537 4.25077 12.6357 4.40192C12.7344 4.55307 12.8672 4.67894 13.0234 4.76941C13.1796 4.85987 13.3549 4.91241 13.5351 4.92279C13.7153 4.93317 13.8954 4.9011 14.061 4.82917L15.2285 4.31667C15.3471 4.26446 15.4789 4.25037 15.6058 4.27634C15.7327 4.30232 15.8484 4.36708 15.9368 4.46167C16.7801 5.36257 17.4081 6.44301 17.7735 7.62167C17.8118 7.74553 17.8107 7.87825 17.7702 8.00143C17.7298 8.1246 17.652 8.23215 17.5477 8.30917L16.5127 9.0725C16.3671 9.17941 16.2488 9.31908 16.1672 9.48021C16.0856 9.64134 16.0431 9.8194 16.0431 10C16.0431 10.1806 16.0856 10.3587 16.1672 10.5198C16.2488 10.6809 16.3671 10.8206 16.5127 10.9275L17.5485 11.69C17.6531 11.767 17.7312 11.8746 17.7718 11.998C17.8124 12.1213 17.8136 12.2543 17.7752 12.3783C17.4096 13.5569 16.7817 14.6373 15.9385 15.5383C15.8502 15.6327 15.7349 15.6974 15.6083 15.7235C15.4818 15.7496 15.3503 15.7359 15.2318 15.6842L14.0593 15.17C13.894 15.0975 13.7139 15.065 13.5337 15.075C13.3534 15.085 13.178 15.1373 13.0218 15.2277C12.8655 15.3181 12.7327 15.444 12.6341 15.5953C12.5355 15.7465 12.4739 15.9189 12.4543 16.0983L12.3135 17.37C12.2993 17.498 12.2459 17.6186 12.1606 17.7151C12.0752 17.8116 11.9622 17.8794 11.8368 17.9092C10.6298 18.1963 9.37222 18.1963 8.16518 17.9092C8.03985 17.8794 7.92678 17.8116 7.84146 17.7151C7.75613 17.6186 7.70271 17.498 7.68851 17.37L7.54851 16.1C7.5281 15.921 7.46597 15.7493 7.36711 15.5986C7.26826 15.448 7.13543 15.3226 6.97933 15.2327C6.82322 15.1427 6.64818 15.0906 6.46828 15.0806C6.28838 15.0706 6.10864 15.1029 5.94351 15.175L4.77185 15.6883C4.65333 15.7402 4.52162 15.7541 4.39489 15.728C4.26817 15.7019 4.15267 15.6371 4.06435 15.5425C3.22077 14.6405 2.59279 13.5589 2.22768 12.3792C2.18926 12.2551 2.19044 12.1222 2.23107 11.9988C2.27169 11.8754 2.34973 11.7678 2.45435 11.6908L3.49018 10.9275C3.63589 10.8207 3.75438 10.6811 3.83605 10.5199C3.91773 10.3588 3.96029 10.1807 3.96029 10C3.96029 9.81934 3.91773 9.64122 3.83605 9.48008C3.75438 9.31894 3.63589 9.17931 3.49018 9.0725L2.45435 8.31083C2.34988 8.23376 2.272 8.12607 2.23153 8.00272C2.19106 7.87937 2.19001 7.74648 2.22851 7.6225C2.59395 6.44385 3.22192 5.36343 4.06518 4.4625C4.15367 4.36791 4.26936 4.30315 4.39625 4.27718C4.52315 4.2512 4.65498 4.26529 4.77351 4.3175L5.94018 4.83C6.10603 4.90189 6.28643 4.93388 6.46689 4.92341C6.64734 4.91293 6.82283 4.86027 6.97924 4.76966C7.13565 4.67906 7.26864 4.55303 7.3675 4.4017C7.46637 4.25037 7.52837 4.07797 7.54851 3.89833L7.69018 2.62667C7.70448 2.49696 7.75902 2.37499 7.84615 2.27785C7.93327 2.1807 8.04862 2.11327 8.17601 2.085C8.77351 1.9525 9.38435 1.8825 10.0102 1.875ZM10.0102 3.125C9.63217 3.12944 9.25501 3.16203 8.88185 3.2225L8.79101 4.03667C8.74941 4.4113 8.62033 4.77091 8.41419 5.08649C8.20805 5.40207 7.93061 5.66477 7.60427 5.85341C7.27793 6.04204 6.91182 6.15133 6.53547 6.17245C6.15912 6.19357 5.78308 6.12594 5.43768 5.975L4.68935 5.64667C4.21267 6.2251 3.83327 6.87723 3.56601 7.5775L4.23101 8.06667C4.53453 8.28972 4.7813 8.58106 4.95138 8.91714C5.12147 9.25321 5.21009 9.62459 5.21009 10.0013C5.21009 10.3779 5.12147 10.7493 4.95138 11.0854C4.7813 11.4214 4.53453 11.7128 4.23101 11.9358L3.56518 12.4258C3.83185 13.1275 4.21185 13.7808 4.68851 14.3608L5.44268 14.03C5.78726 13.8796 6.16234 13.8121 6.53774 13.8331C6.91314 13.8541 7.27837 13.9629 7.60403 14.1508C7.92968 14.3388 8.20667 14.6005 8.41269 14.915C8.61871 15.2296 8.74801 15.5881 8.79018 15.9617L8.88185 16.7817C9.62268 16.9067 10.3802 16.9067 11.121 16.7817L11.2127 15.9617C11.2542 15.5876 11.383 15.2285 11.5889 14.9134C11.7947 14.5982 12.0717 14.3359 12.3976 14.1476C12.7235 13.9593 13.0891 13.8502 13.4649 13.8292C13.8407 13.8082 14.2162 13.8758 14.561 14.0267L15.3152 14.3567C15.7916 13.7779 16.1707 13.1255 16.4377 12.425L15.7727 11.935C15.4692 11.7119 15.2224 11.4206 15.0523 11.0845C14.8822 10.7485 14.7936 10.3771 14.7936 10.0004C14.7936 9.62375 14.8822 9.25238 15.0523 8.9163C15.2224 8.58023 15.4692 8.28889 15.7727 8.06583L16.436 7.57667C16.1688 6.8764 15.7894 6.22427 15.3127 5.64583L14.566 5.97333C14.2208 6.12446 13.8449 6.19229 13.4686 6.17135C13.0924 6.1504 12.7263 6.04128 12.4 5.85278C12.0737 5.66428 11.7963 5.40169 11.5902 5.08621C11.3841 4.77073 11.2551 4.41121 11.2135 4.03667L11.1218 3.22333C10.7545 3.16328 10.3832 3.13069 10.011 3.12583L10.0102 3.125ZM10.0002 6.875C10.829 6.875 11.6238 7.20424 12.2099 7.79029C12.7959 8.37634 13.1252 9.1712 13.1252 10C13.1252 10.8288 12.7959 11.6237 12.2099 12.2097C11.6238 12.7958 10.829 13.125 10.0002 13.125C9.17138 13.125 8.37652 12.7958 7.79047 12.2097C7.20442 11.6237 6.87518 10.8288 6.87518 10C6.87518 9.1712 7.20442 8.37634 7.79047 7.79029C8.37652 7.20424 9.17138 6.875 10.0002 6.875ZM10.0002 8.125C9.5029 8.125 9.02599 8.32254 8.67435 8.67417C8.32272 9.02581 8.12518 9.50272 8.12518 10C8.12518 10.4973 8.32272 10.9742 8.67435 11.3258C9.02599 11.6775 9.5029 11.875 10.0002 11.875C10.4975 11.875 10.9744 11.6775 11.326 11.3258C11.6776 10.9742 11.8752 10.4973 11.8752 10C11.8752 9.50272 11.6776 9.02581 11.326 8.67417C10.9744 8.32254 10.4975 8.125 10.0002 8.125Z"
          //                fill="#2A70D9"
          //              />
          //            </svg>
          //            Setup
          //          </button>
          //        </li>
               
          //  </ul>
          //           </div>
          //         </div>
          //       </div>
                // )
              })}
            </div>
          )}
        </Col>
      </Row>
    </div>
        </div>
      </div>
    </div>
  );
  
};
export default SelectService;
