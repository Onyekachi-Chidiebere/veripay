import React, { useEffect } from 'react';
import { Col, Row } from 'react-bootstrap';
import { NavLink } from 'react-router-dom';
import useSetup from '../hooks/useSetup';
import '../styles/setupServices.css';
import Error from './Error';
import { useNavigate } from 'react-router-dom';

const SelectSetup = () => {
  const navigate = useNavigate()
  const {
    getServices,
    selectService,
    submitSelectedServices,
    services,
    loading,
    error,
    setError,
    selectedId
  } = useSetup();
  const colors = ['#A9D8FD', '#FFD865', '#FFB8B8', '#A9D8FD'];
  useEffect(() => {
    //get required services
    getServices();
  }, []);
  return (
    <div className="w-100">
      <nav className=" w-100 d-flex justify-content-between ">
        <h1 className="fs-4">Services</h1>
        {selectedId.length!==0&&<button onClick={() => submitSelectedServices()} className="btn fs-6 btn-primary">
          <svg
            className="me-2"
            width="24"
            height="24"
            viewBox="0 0 24 24"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M12.012 2.25C12.746 2.258 13.477 2.343 14.194 2.503C14.3465 2.53705 14.4846 2.6179 14.589 2.73426C14.6933 2.85062 14.7587 2.99667 14.776 3.152L14.946 4.679C14.97 4.89428 15.0442 5.10093 15.1626 5.28231C15.2811 5.46368 15.4404 5.61473 15.6279 5.72329C15.8153 5.83185 16.0256 5.89489 16.2419 5.90735C16.4582 5.9198 16.6743 5.88132 16.873 5.795L18.274 5.18C18.4162 5.11735 18.5744 5.10044 18.7267 5.13161C18.879 5.16278 19.0178 5.24049 19.124 5.354C20.1359 6.43509 20.8895 7.73161 21.328 9.146C21.374 9.29464 21.3726 9.45389 21.324 9.60171C21.2755 9.74953 21.1822 9.87858 21.057 9.971L19.815 10.887C19.6403 11.0153 19.4983 11.1829 19.4004 11.3763C19.3026 11.5696 19.2516 11.7833 19.2516 12C19.2516 12.2167 19.3026 12.4304 19.4004 12.6237C19.4983 12.8171 19.6403 12.9847 19.815 13.113L21.058 14.028C21.1835 14.1204 21.2772 14.2495 21.3259 14.3976C21.3747 14.5456 21.3761 14.7051 21.33 14.854C20.8913 16.2683 20.1378 17.5648 19.126 18.646C19.0201 18.7593 18.8817 18.8369 18.7298 18.8682C18.5779 18.8996 18.4201 18.8831 18.278 18.821L16.871 18.204C16.6726 18.117 16.4565 18.0779 16.2402 18.09C16.0239 18.102 15.8134 18.1648 15.6259 18.2733C15.4384 18.3817 15.279 18.5328 15.1607 18.7143C15.0424 18.8958 14.9685 19.1026 14.945 19.318L14.776 20.844C14.759 20.9976 14.6949 21.1423 14.5925 21.2581C14.4901 21.3739 14.3544 21.4553 14.204 21.491C12.7556 21.8356 11.2465 21.8356 9.798 21.491C9.6476 21.4553 9.51193 21.3739 9.40953 21.2581C9.30714 21.1423 9.24304 20.9976 9.226 20.844L9.058 19.32C9.0335 19.1052 8.95895 18.8991 8.84032 18.7183C8.72169 18.5376 8.56231 18.3872 8.37498 18.2792C8.18765 18.1712 7.9776 18.1087 7.76172 18.0967C7.54585 18.0847 7.33016 18.1235 7.132 18.21L5.726 18.826C5.58378 18.8883 5.42573 18.9049 5.27366 18.8736C5.12159 18.8422 4.98299 18.7645 4.877 18.651C3.86471 17.5686 3.11114 16.2707 2.673 14.855C2.6269 14.7061 2.62832 14.5466 2.67706 14.3986C2.72581 14.2505 2.81946 14.1214 2.945 14.029L4.188 13.113C4.36285 12.9848 4.50504 12.8173 4.60305 12.6239C4.70106 12.4305 4.75214 12.2168 4.75214 12C4.75214 11.7832 4.70106 11.5695 4.60305 11.3761C4.50504 11.1827 4.36285 11.0152 4.188 10.887L2.945 9.973C2.81964 9.88052 2.72619 9.75129 2.67762 9.60327C2.62906 9.45525 2.62779 9.29577 2.674 9.147C3.11253 7.73262 3.86609 6.43611 4.878 5.355C4.98419 5.24149 5.12301 5.16378 5.27529 5.13261C5.42756 5.10144 5.58576 5.11835 5.728 5.181L7.128 5.796C7.32702 5.88227 7.5435 5.92066 7.76005 5.90809C7.9766 5.89551 8.18718 5.83232 8.37487 5.7236C8.56257 5.61487 8.72215 5.46363 8.84079 5.28204C8.95943 5.10045 9.03383 4.89356 9.058 4.678L9.228 3.152C9.24516 2.99635 9.31061 2.84998 9.41516 2.73341C9.51971 2.61684 9.65813 2.53592 9.811 2.502C10.528 2.343 11.261 2.259 12.012 2.25ZM12.012 3.75C11.5584 3.75533 11.1058 3.79443 10.658 3.867L10.549 4.844C10.4991 5.29356 10.3442 5.7251 10.0968 6.10379C9.84944 6.48248 9.51652 6.79772 9.12491 7.02409C8.7333 7.25045 8.29396 7.3816 7.84235 7.40694C7.39073 7.43229 6.93948 7.35112 6.525 7.17L5.627 6.776C5.05499 7.47012 4.59971 8.25268 4.279 9.093L5.077 9.68C5.44122 9.94767 5.73734 10.2973 5.94145 10.7006C6.14555 11.1039 6.2519 11.5495 6.2519 12.0015C6.2519 12.4535 6.14555 12.8991 5.94145 13.3024C5.73734 13.7057 5.44122 14.0553 5.077 14.323L4.278 14.911C4.598 15.753 5.054 16.537 5.626 17.233L6.531 16.836C6.94449 16.6555 7.39459 16.5745 7.84508 16.5997C8.29556 16.6249 8.73383 16.7555 9.12462 16.981C9.51541 17.2065 9.84779 17.5206 10.095 17.898C10.3422 18.2755 10.4974 18.7057 10.548 19.154L10.658 20.138C11.547 20.288 12.456 20.288 13.345 20.138L13.455 19.154C13.5048 18.7051 13.6594 18.2742 13.9064 17.896C14.1534 17.5179 14.4859 17.2031 14.8769 16.9771C15.268 16.7511 15.7067 16.6202 16.1577 16.595C16.6086 16.5698 17.0592 16.651 17.473 16.832L18.378 17.228C18.9497 16.5335 19.4046 15.7506 19.725 14.91L18.927 14.322C18.5628 14.0543 18.2667 13.7047 18.0626 13.3014C17.8585 12.8981 17.7521 12.4525 17.7521 12.0005C17.7521 11.5485 17.8585 11.1029 18.0626 10.6996C18.2667 10.2963 18.5628 9.94667 18.927 9.679L19.723 9.092C19.4023 8.25168 18.947 7.46912 18.375 6.775L17.479 7.168C17.0648 7.34935 16.6137 7.43075 16.1622 7.40562C15.7106 7.38049 15.2714 7.24953 14.8798 7.02333C14.4882 6.79713 14.1554 6.48203 13.908 6.10345C13.6607 5.72488 13.5059 5.29345 13.456 4.844L13.346 3.868C12.9052 3.79593 12.4596 3.75682 12.013 3.751L12.012 3.75ZM12 8.25C12.9946 8.25 13.9484 8.64509 14.6517 9.34835C15.3549 10.0516 15.75 11.0054 15.75 12C15.75 12.9946 15.3549 13.9484 14.6517 14.6517C13.9484 15.3549 12.9946 15.75 12 15.75C11.0054 15.75 10.0516 15.3549 9.34835 14.6517C8.64509 13.9484 8.25 12.9946 8.25 12C8.25 11.0054 8.64509 10.0516 9.34835 9.34835C10.0516 8.64509 11.0054 8.25 12 8.25ZM12 9.75C11.4033 9.75 10.831 9.98705 10.409 10.409C9.98705 10.831 9.75 11.4033 9.75 12C9.75 12.5967 9.98705 13.169 10.409 13.591C10.831 14.0129 11.4033 14.25 12 14.25C12.5967 14.25 13.169 14.0129 13.591 13.591C14.0129 13.169 14.25 12.5967 14.25 12C14.25 11.4033 14.0129 10.831 13.591 10.409C13.169 9.98705 12.5967 9.75 12 9.75Z"
              fill="white"
            />
          </svg>

          <span>Setup Services</span>
        </button>}
        {selectedId.length===0&&<button className="btn service-disabled-button fs-6">
          <svg
            className="me-2"
            width="24"
            height="24"
            viewBox="0 0 24 24"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M12.012 2.25C12.746 2.258 13.477 2.343 14.194 2.503C14.3465 2.53705 14.4846 2.6179 14.589 2.73426C14.6933 2.85062 14.7587 2.99667 14.776 3.152L14.946 4.679C14.97 4.89428 15.0442 5.10093 15.1626 5.28231C15.2811 5.46368 15.4404 5.61473 15.6279 5.72329C15.8153 5.83185 16.0256 5.89489 16.2419 5.90735C16.4582 5.9198 16.6743 5.88132 16.873 5.795L18.274 5.18C18.4162 5.11735 18.5744 5.10044 18.7267 5.13161C18.879 5.16278 19.0178 5.24049 19.124 5.354C20.1359 6.43509 20.8895 7.73161 21.328 9.146C21.374 9.29464 21.3726 9.45389 21.324 9.60171C21.2755 9.74953 21.1822 9.87858 21.057 9.971L19.815 10.887C19.6403 11.0153 19.4983 11.1829 19.4004 11.3763C19.3026 11.5696 19.2516 11.7833 19.2516 12C19.2516 12.2167 19.3026 12.4304 19.4004 12.6237C19.4983 12.8171 19.6403 12.9847 19.815 13.113L21.058 14.028C21.1835 14.1204 21.2772 14.2495 21.3259 14.3976C21.3747 14.5456 21.3761 14.7051 21.33 14.854C20.8913 16.2683 20.1378 17.5648 19.126 18.646C19.0201 18.7593 18.8817 18.8369 18.7298 18.8682C18.5779 18.8996 18.4201 18.8831 18.278 18.821L16.871 18.204C16.6726 18.117 16.4565 18.0779 16.2402 18.09C16.0239 18.102 15.8134 18.1648 15.6259 18.2733C15.4384 18.3817 15.279 18.5328 15.1607 18.7143C15.0424 18.8958 14.9685 19.1026 14.945 19.318L14.776 20.844C14.759 20.9976 14.6949 21.1423 14.5925 21.2581C14.4901 21.3739 14.3544 21.4553 14.204 21.491C12.7556 21.8356 11.2465 21.8356 9.798 21.491C9.6476 21.4553 9.51193 21.3739 9.40953 21.2581C9.30714 21.1423 9.24304 20.9976 9.226 20.844L9.058 19.32C9.0335 19.1052 8.95895 18.8991 8.84032 18.7183C8.72169 18.5376 8.56231 18.3872 8.37498 18.2792C8.18765 18.1712 7.9776 18.1087 7.76172 18.0967C7.54585 18.0847 7.33016 18.1235 7.132 18.21L5.726 18.826C5.58378 18.8883 5.42573 18.9049 5.27366 18.8736C5.12159 18.8422 4.98299 18.7645 4.877 18.651C3.86471 17.5686 3.11114 16.2707 2.673 14.855C2.6269 14.7061 2.62832 14.5466 2.67706 14.3986C2.72581 14.2505 2.81946 14.1214 2.945 14.029L4.188 13.113C4.36285 12.9848 4.50504 12.8173 4.60305 12.6239C4.70106 12.4305 4.75214 12.2168 4.75214 12C4.75214 11.7832 4.70106 11.5695 4.60305 11.3761C4.50504 11.1827 4.36285 11.0152 4.188 10.887L2.945 9.973C2.81964 9.88052 2.72619 9.75129 2.67762 9.60327C2.62906 9.45525 2.62779 9.29577 2.674 9.147C3.11253 7.73262 3.86609 6.43611 4.878 5.355C4.98419 5.24149 5.12301 5.16378 5.27529 5.13261C5.42756 5.10144 5.58576 5.11835 5.728 5.181L7.128 5.796C7.32702 5.88227 7.5435 5.92066 7.76005 5.90809C7.9766 5.89551 8.18718 5.83232 8.37487 5.7236C8.56257 5.61487 8.72215 5.46363 8.84079 5.28204C8.95943 5.10045 9.03383 4.89356 9.058 4.678L9.228 3.152C9.24516 2.99635 9.31061 2.84998 9.41516 2.73341C9.51971 2.61684 9.65813 2.53592 9.811 2.502C10.528 2.343 11.261 2.259 12.012 2.25ZM12.012 3.75C11.5584 3.75533 11.1058 3.79443 10.658 3.867L10.549 4.844C10.4991 5.29356 10.3442 5.7251 10.0968 6.10379C9.84944 6.48248 9.51652 6.79772 9.12491 7.02409C8.7333 7.25045 8.29396 7.3816 7.84235 7.40694C7.39073 7.43229 6.93948 7.35112 6.525 7.17L5.627 6.776C5.05499 7.47012 4.59971 8.25268 4.279 9.093L5.077 9.68C5.44122 9.94767 5.73734 10.2973 5.94145 10.7006C6.14555 11.1039 6.2519 11.5495 6.2519 12.0015C6.2519 12.4535 6.14555 12.8991 5.94145 13.3024C5.73734 13.7057 5.44122 14.0553 5.077 14.323L4.278 14.911C4.598 15.753 5.054 16.537 5.626 17.233L6.531 16.836C6.94449 16.6555 7.39459 16.5745 7.84508 16.5997C8.29556 16.6249 8.73383 16.7555 9.12462 16.981C9.51541 17.2065 9.84779 17.5206 10.095 17.898C10.3422 18.2755 10.4974 18.7057 10.548 19.154L10.658 20.138C11.547 20.288 12.456 20.288 13.345 20.138L13.455 19.154C13.5048 18.7051 13.6594 18.2742 13.9064 17.896C14.1534 17.5179 14.4859 17.2031 14.8769 16.9771C15.268 16.7511 15.7067 16.6202 16.1577 16.595C16.6086 16.5698 17.0592 16.651 17.473 16.832L18.378 17.228C18.9497 16.5335 19.4046 15.7506 19.725 14.91L18.927 14.322C18.5628 14.0543 18.2667 13.7047 18.0626 13.3014C17.8585 12.8981 17.7521 12.4525 17.7521 12.0005C17.7521 11.5485 17.8585 11.1029 18.0626 10.6996C18.2667 10.2963 18.5628 9.94667 18.927 9.679L19.723 9.092C19.4023 8.25168 18.947 7.46912 18.375 6.775L17.479 7.168C17.0648 7.34935 16.6137 7.43075 16.1622 7.40562C15.7106 7.38049 15.2714 7.24953 14.8798 7.02333C14.4882 6.79713 14.1554 6.48203 13.908 6.10345C13.6607 5.72488 13.5059 5.29345 13.456 4.844L13.346 3.868C12.9052 3.79593 12.4596 3.75682 12.013 3.751L12.012 3.75ZM12 8.25C12.9946 8.25 13.9484 8.64509 14.6517 9.34835C15.3549 10.0516 15.75 11.0054 15.75 12C15.75 12.9946 15.3549 13.9484 14.6517 14.6517C13.9484 15.3549 12.9946 15.75 12 15.75C11.0054 15.75 10.0516 15.3549 9.34835 14.6517C8.64509 13.9484 8.25 12.9946 8.25 12C8.25 11.0054 8.64509 10.0516 9.34835 9.34835C10.0516 8.64509 11.0054 8.25 12 8.25ZM12 9.75C11.4033 9.75 10.831 9.98705 10.409 10.409C9.98705 10.831 9.75 11.4033 9.75 12C9.75 12.5967 9.98705 13.169 10.409 13.591C10.831 14.0129 11.4033 14.25 12 14.25C12.5967 14.25 13.169 14.0129 13.591 13.591C14.0129 13.169 14.25 12.5967 14.25 12C14.25 11.4033 14.0129 10.831 13.591 10.409C13.169 9.98705 12.5967 9.75 12 9.75Z"
              fill="black"
            />
          </svg>

          <span>Setup Services</span>
        </button>}
      </nav>
      <div className="w-100 dashboard-card">
        <div className="select-service-header d-flex w-100 justify-content-between ">
          <div className="service-title d-flex flex-column align-items-md-center">
            <h5>Select Services</h5>
            <p>Select the services you would need for your organization</p>
          </div>
          <svg
            onClick={()=>navigate('/dashboard')}
            style={{ cursor: 'pointer' }}
            width="32"
            height="32"
            viewBox="0 0 32 32"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M17.8799 16.0001L23.6132 10.2801C23.8643 10.029 24.0054 9.68849 24.0054 9.33342C24.0054 8.97835 23.8643 8.63782 23.6132 8.38675C23.3622 8.13568 23.0217 7.99463 22.6666 7.99463C22.3115 7.99463 21.971 8.13568 21.7199 8.38675L15.9999 14.1201L10.2799 8.38675C10.0288 8.13568 9.68832 7.99463 9.33325 7.99463C8.97818 7.99463 8.63766 8.13568 8.38659 8.38675C8.13551 8.63782 7.99446 8.97835 7.99446 9.33342C7.99446 9.68849 8.13551 10.029 8.38659 10.2801L14.1199 16.0001L8.38659 21.7201C8.26161 21.844 8.16242 21.9915 8.09473 22.154C8.02704 22.3165 7.99219 22.4907 7.99219 22.6668C7.99219 22.8428 8.02704 23.017 8.09473 23.1795C8.16242 23.342 8.26161 23.4895 8.38659 23.6134C8.51054 23.7384 8.658 23.8376 8.82048 23.9053C8.98296 23.973 9.15724 24.0078 9.33325 24.0078C9.50927 24.0078 9.68354 23.973 9.84602 23.9053C10.0085 23.8376 10.156 23.7384 10.2799 23.6134L15.9999 17.8801L21.7199 23.6134C21.8439 23.7384 21.9913 23.8376 22.1538 23.9053C22.3163 23.973 22.4906 24.0078 22.6666 24.0078C22.8426 24.0078 23.0169 23.973 23.1794 23.9053C23.3418 23.8376 23.4893 23.7384 23.6132 23.6134C23.7382 23.4895 23.8374 23.342 23.9051 23.1795C23.9728 23.017 24.0076 22.8428 24.0076 22.6668C24.0076 22.4907 23.9728 22.3165 23.9051 22.154C23.8374 21.9915 23.7382 21.844 23.6132 21.7201L17.8799 16.0001Z"
              fill="#222222"
            />
          </svg>
        </div>
        <div>
        <div className="w-100 dashboard-card">
      <Row className="justify-content-center">
        <Col md={11}>
          {error && <Error message={error} open={setError} />}
          {services.map((service, index) => {
            let i = Math.floor(Math.random() * (3 + 1));
            return (
              <div
                onClick={() => selectService(index)}
                key={index}
                style={{ borderLeftColor: colors[i] }}
                className="select-service-item-holder d-flex align-items-center"
              >
                {service.subscribed ? (
                  <svg
                    width="24"
                    height="24"
                    viewBox="0 0 24 24"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M22 0H2C1.46957 0 0.960859 0.210714 0.585786 0.585786C0.210714 0.960859 0 1.46957 0 2V22C0 22.5304 0.210714 23.0391 0.585786 23.4142C0.960859 23.7893 1.46957 24 2 24H22C22.5304 24 23.0391 23.7893 23.4142 23.4142C23.7893 23.0391 24 22.5304 24 22V2C24 1.46957 23.7893 0.960859 23.4142 0.585786C23.0391 0.210714 22.5304 0 22 0ZM10 17.5L5 12.543L6.59 11L10 14.346L17.409 7L19 8.577L10 17.5Z"
                      fill="#17517E"
                    />
                  </svg>
                ) : (
                  <svg
                    width="24"
                    height="24"
                    viewBox="0 0 24 24"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M0.801636 4.40005C0.801636 3.44527 1.18092 2.5296 1.85605 1.85446C2.53118 1.17933 3.44686 0.800049 4.40164 0.800049H19.6C20.5548 0.800049 21.4705 1.17933 22.1456 1.85446C22.8208 2.5296 23.2 3.44527 23.2 4.40005V19.6001C23.2 20.5548 22.8208 21.4705 22.1456 22.1456C21.4705 22.8208 20.5548 23.2001 19.6 23.2001H4.40164C3.44686 23.2001 2.53118 22.8208 1.85605 22.1456C1.18092 21.4705 0.801636 20.5548 0.801636 19.6001V4.40005ZM4.40164 3.20005C4.08338 3.20005 3.77815 3.32648 3.55311 3.55152C3.32806 3.77656 3.20164 4.08179 3.20164 4.40005V19.6001C3.20164 20.2625 3.73924 20.8001 4.40164 20.8001H19.6C19.9183 20.8001 20.2235 20.6736 20.4486 20.4486C20.6736 20.2235 20.8 19.9183 20.8 19.6001V4.40005C20.8 4.08179 20.6736 3.77656 20.4486 3.55152C20.2235 3.32648 19.9183 3.20005 19.6 3.20005H4.40164Z"
                      fill="#9F9F9F"
                    />
                  </svg>
                )}
                <p>{service.name}</p>
              </div>
            );
          })}
        </Col>
      </Row>
      <Row className="justify-content-center">
        <Col md={4} className="d-flex justify-content-center">
          {/* <NavLink className="btn service-setup-btn" to="service"> */}
          <button
            onClick={() => submitSelectedServices()}
            className="btn service-setup-btn "
          >
            {loading ? 'Loading...' : 'Continue'}
          </button>
        </Col>
      </Row>
    </div>
        </div>
      </div>
    </div>
  );
  
};
export default SelectSetup;
